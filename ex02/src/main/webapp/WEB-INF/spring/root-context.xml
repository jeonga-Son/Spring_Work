<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
		<!-- hikariConfig를 통해 DB에 대한 정보를 객체화 하였다. -->
		<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
			<property name="driverClassName"
				value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
			<property name="jdbcUrl"
				value="jdbc:log4jdbc:oracle:thin:@localhost:1521:XE"/> <!-- oracle 서비스 주소 -->
			<property name="username" value="kosa01"></property> 
			<property name="password" value="1234"></property>
		</bean>
		
		
		<!-- dataSource 객체를 만들어 준다. => oracle과 잘 연결되었다는 뜻. -->
		<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
			<constructor-arg ref="hikariConfig"/>
		</bean>
		
		<!-- SqlSessionFactoryBean 생성 -->
		<bean id="sqlSessionFactoryBean"
			class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource"/> <!-- dataSource객체 요구. DB와 연결이 잘 되었는지 묻는 것과 동일 -->
		</bean>
		
		<!-- 객체를 여기서 다 생성한다. 주문서와 같다. mapper 등록 -->
		<mybatis-spring:scan base-package="org.zerock.mapper"/>	
		
		<context:component-scan base-package="org.zerock.service"></context:component-scan>	
</beans>
