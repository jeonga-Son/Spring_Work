<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<context:component-scan base-package="kosa"></context:component-scan>
	
	<!--  DispatcherSerlvet이 처리하지 못한 요청을 DefaultSerlvet에게 넘겨주는 역할을 하는 핸들러 -->
	<mvc:annotation-driven/>
	<mvc:default-servlet-handler/>

	<!-- InternalResourceViewResolver => jsp를 의미한다. -->
	<!-- 확장자를 정의한다.  -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/view/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>
	
	<!-- Mybatis Setting -->
	<bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean> <!-- 최종적으로 만들고 싶은 것은 sqlSessionFactory였다. 즉, 최종적으로 sqlSessionFactory를 만들어준다. -->
	<!-- 이것을 통해 spring과 mybatis와 연결이 된다. 즉, 연결점이다. -->
	
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="myDataSource"></property> <!-- myDataSource 객체를 전달 -->
		<property name="configuration" value="/WEB-INF/mybatis-config.xml"></property>
	</bean>
	
	<bean id="myDataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="jdbc/oracle"/>
		<property name="resourceRef" value="true"/>
		</bean>
</beans>
